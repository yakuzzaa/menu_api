version: '1'
services:
  y_lab_web:
    container_name: y_lab_web
    build:
      dockerfile: Dockerfile
    env_file:
      - .env
    environment:
      POSTGRES_HOST: db
      REDIS_HOST: redis
    entrypoint: sh -c "alembic upgrade head && uvicorn main:app --host y_lab_web --port 8000"
    restart: always
    links:
      - db:db
    networks:
      - y_lab_network
    ports:
      - "8000:8000"
    depends_on:
      db:
        condition: service_healthy
      redis:
        condition: service_started




  db:
    image: postgres:15.1-alpine
    container_name: db
    volumes:
      - database_volume:/var/lib/postgresql/data
    env_file:
      - .env
    environment:
      POSTGRES_DB: "${POSTGRES_DB}"
      POSTGRES_USER: "${POSTGRES_USER}"
      POSTGRES_PASSWORD: "${POSTGRES_PASSWORD}"
    expose:
      - 5432
    ports:
      - "5432:5432"
    networks:
      - y_lab_network
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready", "-U", "${POSTGRES_USER}", "-d", "${POSTGRES_DB}" ]

  redis:
    image: redis:alpine
    container_name: redis
    ports:
      - '6379:6379'
    restart: always
    networks:
      - y_lab_network
    healthcheck:
      test: [ "CMD", "redis-cli","ping" ]
      interval: 10s
      timeout: 5s
      retries: 5

  celery-beat:
    container_name: celery_beat
    build:
      context: .
      dockerfile: Dockerfile
    env_file:
      - .env
    environment:
      POSTGRES_HOST: db
      REDIS_HOST: redis
      BROKER_URL: "${BROKER_URL}"
    depends_on:
      rabbitmq:
        condition: service_healthy
      db:
        condition: service_healthy
      y_lab_web:
        condition: service_started
      redis:
        condition: service_started
    command: [ "celery", "-A", "google_sheet.sheet_parse", "beat", "--loglevel=info" ]
    networks:
      - y_lab_network

  celery_worker:
      container_name: celery_worker

      build:
        context: .
        dockerfile: Dockerfile
      env_file:
        - .env
      environment:
        POSTGRES_HOST: db
        REDIS_HOST: redis
        BROKER_URL: "${BROKER_URL}"
      depends_on:
        rabbitmq:
          condition: service_healthy
        db:
          condition: service_healthy
        y_lab_web:
          condition: service_started
        redis:
          condition: service_started
      command: [ "celery", "-A", "google_sheet.sheet_parse", "worker", "--loglevel=info"]
      networks:
        - y_lab_network

  rabbitmq:
      container_name: rabbitmq
      image: "rabbitmq"
      ports:
        - "5672:5672"
      healthcheck:
        test: rabbitmq-diagnostics -q ping
        interval: 30s
        timeout: 30s
        retries: 3
      networks:
        - y_lab_network
networks:
  y_lab_network:
    name: y_lab_network
volumes:
  database_volume:
