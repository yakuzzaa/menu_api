version: "1.1"
services:
  y_lab_tests:
    container_name: y_lab_tests
    build:
      dockerfile: Dockerfile
    env_file:
      - .env.test
    environment:
      POSTGRES_HOST: db_test
      REDIS_HOST: redis
    entrypoint: sh -c "alembic upgrade head && pytest"
    networks:
      - y_lab_network
    links:
      - db_test:db_test
    depends_on:
      db_test:
        condition: service_healthy
      redis:
        condition: service_started
    tty: true

  db_test:
    container_name: db_test
    image: postgres:15.1-alpine
    env_file:
      - .env.test
    environment:
      POSTGRES_DB: "${POSTGRES_DB}"
      POSTGRES_USER: "${POSTGRES_USER}"
      POSTGRES_PASSWORD: "${POSTGRES_PASSWORD}"
    volumes:
      - database_volume:/var/lib/postgresql/test_data
    expose:
      - 5432
    ports:
      - "5432:5432"
    networks:
      - y_lab_network
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready", "-U", "${POSTGRES_USER}", "-d", "${POSTGRES_DB}" ]
      interval: 10s
      timeout: 30s
      retries: 5
      start_period: 80s

  redis:
    image: redis:alpine
    container_name: redis
    ports:
      - '6379:6379'
    restart: always
    networks:
      - y_lab_network
    healthcheck:
      test: [ "CMD", "redis-cli","ping" ]
      interval: 10s
      timeout: 5s
      retries: 5

networks:
  y_lab_network:
    name: y_lab_network
volumes:
  database_volume:
